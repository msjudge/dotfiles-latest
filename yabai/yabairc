#!/usr/bin/env bash

# #############################################################################
# Do not delete the `UNIQUE_ID` line below, I use it to backup original files
# so they're not lost when my symlinks are applied
# UNIQUE_ID=do_not_delete_this_line
# #############################################################################

# To get the names of all the running applications
# yabai -m query --windows | jq -r '.[].app'

# Load all the variables I need from the yabai_env.sh file
source "$HOME/github/dotfiles-latest/yabai/yabai_env.sh"

# This command is the one that loads the scripting addition
# Configure your user to execute `yabai --load-sa` as the root user without having to enter a password.
#  https://github.com/koekeishiya/yabai/wiki/Installing-yabai-(latest-release)#configure-scripting-addition
yabai -m signal --add event=dock_did_restart action="sudo yabai --load-sa"
sudo yabai --load-sa

# In order to prevent simple-bar freezing upon yabai restart, you'll need to add
# this line at the start of your .yabairc file
# https://www.jeantinland.com/toolbox/simple-bar/documentation/installation/#update-your-yabai-config
osascript -e 'tell application id "tracesOf.Uebersicht" to refresh'

###############################################################################
#                              Excluded apps
###############################################################################

yabai -m rule --add app="^${apps_mgoff_normal}$" manage=off
yabai -m rule --add app="^${apps_mgoff_below}$" manage=off sub-layer=below
yabai -m rule --add app="^${apps_mgoff_above}$" manage=off sub-layer=above

# In case you want to debug and see the contents of a variable
# echo "apps_mgoff_below: ^${apps_mgoff_normal}$" > /tmp/yabai_debug.log

# yabai -m rule --add app="kitty" manage=on position=200:50 size=10:50
# yabai -m rule --add app="^kitty$" manage=off position=100:100 size=80:60

###############################################################################
#                          Custom padding settings
###############################################################################

# Simple Bar configuration - using external_bar instead of top_padding
# This reserves space at the top for Simple Bar (36px to prevent overlap)
yabai -m config external_bar all:36:0

# Sketchybar size changes depending if I'm on my laptop or mac mini, solving it
# this way, there may be a better way but this was the easiest to solve for now
# I only change the paddings if yabai is installed, otherwise I use default
# paddings
if command -v sketchybar &>/dev/null; then
  # Check the display size (e.g., grab the resolution here)
  display_resolution=$(system_profiler SPDisplaysDataType | grep Resolution)
  # Resolution for my macbook pro, the * are used as wildcards
  if [[ "$display_resolution" == *"3456 x 2234"* ]]; then
    # Using external_bar for Simple Bar, so top_padding set to 0
    yabai -m config top_padding 0
    yabai -m config bottom_padding 0
    yabai -m config left_padding 0
    yabai -m config right_padding 230
    # Resolution for my shorts
  elif [[ "$display_resolution" == *"1536 x 2048"* ]]; then
    yabai -m config top_padding 0
    yabai -m config bottom_padding 220
    yabai -m config left_padding 0
    yabai -m config right_padding 0
  elif [[ "$display_resolution" == *"3200 x 1800"* ]]; then
    # # This matches my asus 27 inch monitor
    # # yabai -m config top_padding 39
    # lineid_asus_monitor_top_pad
    yabai -m config top_padding 0
    # lineid_asus_monitor_bottom_pad
    yabai -m config bottom_padding 0
    # lineid_asus_monitor_left_pad
    yabai -m config left_padding 0
    # lineid_asus_monitor_right_pad
    yabai -m config right_padding 230
  elif [[ "$display_resolution" == *"3200 x 1600"* ]]; then
    # # This is for the BetterDisplay virtual screen for the zoom OBS scene for main app
    # # yabai -m config top_padding 39
    yabai -m config top_padding 0
    yabai -m config bottom_padding 0
    yabai -m config left_padding 0
    yabai -m config right_padding 230
  elif [[ "$display_resolution" == *"2560 x 1440"* ]]; then
    # This is for the 720p res in BetterDisplay
    # # yabai -m config top_padding 39
    # lineid_asus_monitor_top_pad
    yabai -m config top_padding 0
    # lineid_asus_monitor_bottom_pad
    yabai -m config bottom_padding 0
    # lineid_asus_monitor_left_pad
    yabai -m config left_padding 0
    # lineid_asus_monitor_right_pad
    yabai -m config right_padding 230
  elif [[ "$display_resolution" == *"3024 x 1964"* ]]; then
    # # This matches my macbook 14 inch
    # # yabai -m config top_padding 39
    yabai -m config top_padding 0
    yabai -m config bottom_padding 0
    yabai -m config left_padding 0
    yabai -m config right_padding 230
    # # For videos thumbnails
    # yabai -m config top_padding 400
    # yabai -m config bottom_padding 20
    # yabai -m config left_padding 500
    # yabai -m config right_padding 100

    # For youtube thumbnails
    # yabai -m config right_padding 500

    # For youtube posts and neomemes
    # yabai -m config right_padding 800

    # For shorts
    # yabai -m config bottom_padding 400
  fi
else
  yabai -m config top_padding 0
  yabai -m config bottom_padding 00
fi

###############################################################################
#                                 Paddings
###############################################################################

# Top padding for felixkratz sketchybar
# yabai -m config top_padding 39
# Top padding for default sketchybar
# yabai -m config top_padding 25
# yabai -m config bottom_padding 05
# yabai -m config left_padding 180
# yabai -m config right_padding 05

###############################################################################
#                               Transparency
###############################################################################

# Enable or disable transparency
yabai -m config window_opacity on
# yabai -m config window_opacity off

opacity_value=0.87

# Make the below apps transparent
yabai -m signal --add event=window_focused app="^${apps_transparent}$" action="yabai -m config active_window_opacity $opacity_value"
# I don't want to be moving Ghostty around to other desktops, so I'll set its
# opacity to 1 and manage its transparency through the ghostty config file
yabai -m signal --add event=window_focused app="Ghostty" action="yabai -m config active_window_opacity 1"
yabai -m signal --add event=window_focused app="^${apps_transparent}$" action="yabai -m config normal_window_opacity 0.00001"

# I want the apps here to always be shown, probably they'll be on the right
# padding section. This is my "sticky notes"
yabai -m rule --add app="^${apps_transp_ignore}$" opacity=$opacity_value
yabai -m rule --add app="^${apps_stream}$" opacity=1

# When any other app gains focus, reset both active and background window opacity to fully visible
yabai -m signal --add event=window_focused app!="^${apps_transparent}$" action="yabai -m config active_window_opacity 1.0"
yabai -m signal --add event=window_focused app!="^${apps_transparent}$" action="yabai -m config normal_window_opacity 1.0"

# yabai -m signal --add event=window_focused app=".*CleanShot X.*" action="yabai -m config active_window_opacity 1.0"
# yabai -m signal --add event=window_focused app=".*CleanShot X.*" action="yabai -m config normal_window_opacity 1.0"

# Nice trick shared by @timhansinger8030 in my YouTube video https://youtu.be/SLCR1oO65GI
# Allows to see mission control apps when calling mission control from a transparent app
yabai -m signal --add event=mission_control_enter action="yabai -m config normal_window_opacity 1.0"
yabai -m signal --add event=mission_control_exit action="yabai -m config active_window_opacity 1.0"

###############################################################################
#                             Yabai Spaces
###############################################################################

# I want to have all the apps in desktop 1, and just a few in other desktops
# If apps are organized incorrectly, just restart yabai
# https://github.com/koekeishiya/yabai/issues/1685

yabai -m space 1 --label desk1
yabai -m space 2 --label desk2
yabai -m space 3 --label desk3
yabai -m space 4 --label desk4
yabai -m space 5 --label desk5
yabai -m space 6 --label desk6
yabai -m space 7 --label desk7
yabai -m space 8 --label desk8
yabai -m space 9 --label desk9
yabai -m space 10 --label desk10

# Check if desk4 exists, label it if it does
if yabai -m query --spaces | jq -e '.[] | select(.index==11)' >/dev/null; then
  yabai -m space 11 --label desk11
  target_space="desk11"
else
  target_space="desk1"
fi

yabai -m rule --add app="^.*$" space=desk1
yabai -m rule --add app="^Ghostty$" space=desk2
yabai -m rule --add app="^kitty$" space=desk3
yabai -m rule --add app="^Discord$" space=$target_space
yabai -m rule --add app="^Element$" space=$target_space
yabai -m rule --add app="^WhatsApp Web$" space=$target_space
yabai -m rule --add app="^OBS Studio$" space=$target_space
yabai -m rule --add app="^Mail$" space=$target_space
yabai -m rule --add app="^1Password$" space=$target_space
yabai -m rule --add app="^Calendar$" space=$target_space
yabai -m rule --add app="^Google Chrome$" space=$target_space
yabai -m rule --add app="^Microsoft Teams$" space=$target_space
yabai -m rule --add app="^ChatGPT$" space=$target_space
yabai -m rule --add app="^Vivaldi$" space=$target_space
yabai -m rule --add app="^socialstream$" space=$target_space
yabai -m rule --add app="^Signal$" space=$target_space
yabai -m rule --add app="^Google Photos$" space=$target_space

# exact title match
yabai -m rule --add app="^kitty$" title="^kitty:home$" space=desk3
yabai -m rule --add app="^kitty$" title="^kitty:dotfiles$" space=desk4
yabai -m rule --add app="^kitty$" title="^kitty:obsidian$" space=desk4
yabai -m rule --add app="^kitty$" title="^kitty:blogpost$" space=desk4

###############################################################################
#                             sub-layer=normal
###############################################################################

# https://github.com/koekeishiya/yabai/issues/1929

# Set all apps to the "normal" sub-layer, otherwise they all start on the "below"
# sub-layer. Doing this fixed the issue I had with floating windows with OBS,
# davinci resolve and other apps where their floating windows would show on top
# of other apps

yabai -m rule --add app=".*" sub-layer=normal

###############################################################################
#                                  Misc
###############################################################################

# global settings
# When I leave youtube or chrome, hammerspoon will move the mouse to the corner

# "mouse_follows_focus on" will move the mouse back to the center, but DISABLE it or it will
# be a nightmare to use iStat Menus
# Update: Fuck iStat Menus, neverd used it anyway. I need for my mouse to follow
# trickster
yabai -m config mouse_follows_focus on

# I don't understand what this does, I've enabled and disabled it in the past,
# and still don't get it
# This option as removed https://github.com/koekeishiya/yabai/issues/1887
# yabai -m config window_topmost off

# Configure the layout mode
# "stack" - is what I use, keeps a single app on the front
# "bsp" - binary space partitioning enables automatic tiling (partitioning)
# "float" - default mode, windows are not managed
yabai -m config layout stack
# yabai -m config layout bsp
# yabai -m config layout float

###############################################################################
#                              Signal events
###############################################################################

# Adds a signal that, when a window gains focus, triggers a custom action in SketchyBar
# (presumably to update the status bar based on the focused window).
# https://github.com/FelixKratz/dotfiles
# I'm not sure what this does, I don't see a difference
# Not sure if related to "skhd shortcuts should trigger the sketchybar event" in
# the owner dotfiles
yabai -m signal --add event=window_focused action="sketchybar --trigger window_focus"

# Yabai signal to detect focus change for any application and move the cursor
# yabai -m signal --add event=window_focused action="cliclick m:0,0"
# yabai -m signal --add event=window_focused app="Google Chrome" action="cliclick m:0,0"

###############################################################################
#                             scratchpad
###############################################################################

# This comes from the asciidoc file:
# --grid <rows>:<cols>:<start-x>:<start-y>:<width>:<height>
# Set the frame of the selected window based on a self-defined grid.

# yabai -m rule --add app="^Spotify$" scratchpad=music grid=12:12:4:1:4:10
# yabai -m rule --add app="^Spotify$" scratchpad=music grid=12:12:1:1:7:9

# yabai -m rule --add app="^Spotify$" scratchpad=spotify
# yabai -m rule --add app="^(Udemy|WezTerm)$" scratchpad=study

###############################################################################
#                                Defaults
###############################################################################

yabai -m config \
  focus_follows_mouse off \
  window_origin_display default \
  window_placement second_child \
  window_zoom_persist on \
  window_shadow off \
  window_animation_duration 2 \
  window_animation_frame_rate 120 \
  window_opacity_duration 0.0 \
  insert_feedback_color 0xffd75f5f \
  active_window_border_color 0xff775759 \
  normal_window_border_color 0xff555555 \
  window_border_width 4 \
  window_border_radius 12 \
  window_border_blur off \
  window_border_hidpi on \
  window_border off \
  split_ratio 0.50 \
  split_type auto \
  auto_balance off \
  window_gap 06 \
  mouse_modifier fn \
  mouse_action1 move \
  mouse_action2 resize \
  mouse_drop_action swap

# THIS IS VERY IMPORTANT
# It ensures that when I restart yabai, all the rules (including the manage=off rules)
# are reapplied to existing windows
# Otherwise yabai takes care of management and I couldnt resize apps like
# packet tracer for example
yabai -m rule --apply
